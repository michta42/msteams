"use strict";require("core-js/modules/es.promise"),require("core-js/modules/web.queue-microtask");var e,s=(e=require("ava"))&&"object"==typeof e&&"default"in e?e.default:e;function a(e,s){global[e]=s}function t(e){let s=null;a("XMLHttpRequest",class{constructor(){s=this.recorder={},this.recorder.headers={}}open(e,s){this.recorder.opened={method:e,url:s}}setRequestHeader(e,s){this.recorder.headers[e]=s}send(){queueMicrotask(()=>{this.readyState=4,this.status=200,this.responseText=JSON.stringify(e),this.onreadystatechange(),delete this.responseText})}})}require("@k2oss/k2-broker-core/test-framework"),require("./index"),s("onexecute fails for invalid object",e=>{e.throws((function(){onexecute("invalidObject","",{},{})}))}),s.serial("onexecuteTeamArchive succeeds",async e=>{let s=Team,l=TeamArchive,n={[TeamId]:1234};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[TeamId]:1234,[TeamRequestStatusUrl]:void 0,[TeamIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteTeamUnarchive succeeds",async e=>{let s=Team,l=TeamUnarchive,n={[TeamId]:4321};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[TeamId]:4321,[TeamRequestStatusUrl]:void 0,[TeamIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteTeamClone succeeds",async e=>{let s=Team,l=TeamClone,n={[TeamId]:999,[TeamDisplayName]:"SomeName",[TeamDescription]:"SomeDescription",[TeamMailNickname]:"SomeMailNickname"};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[TeamId]:999,[TeamRequestStatusUrl]:void 0,[TeamIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteTeamUpdate succeeds",async e=>{let s=Team,l=TeamUpdate,n={[TeamId]:555,[TeamMsAllowCreateUpdateChannels]:!0,[TeamMsAllowDeleteChannels]:!0,[TeamMsAllowAddRemoveApps]:!0,[TeamMsAllowCreateUpdateRemoveTabs]:!0,[TeamMsAllowCreateUpdateRemoveConnectors]:!0,[TeamGsAllowCreateUpdateChannels]:!0,[TeamGsAllowDeleteChannels]:!0,[TeamMsgAllowUserEditMessages]:!0,[TeamMsgAllowUserDeleteMessages]:!0,[TeamMsgAllowTeamMentions]:!0,[TeamMsgAllowChannelMentions]:!0,[TeamFsAllowGiphy]:!0,[TeamFsAllowStickersAndMemes]:!0,[TeamFsAllowCustomMemes]:!0};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[TeamIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteChannelUpdate succeeds",async e=>{let s=Channel,l=ChannelUpdate,n={[ChannelId]:777,[ChannelTeamId]:888,[ChannelDisplayName]:"SomeName",[ChannelDescription]:"SomeDescription"};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[ChannelIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteChannelDelete succeeds",async e=>{let s=Channel,l=ChannelDelete,n={[ChannelId]:345,[ChannelTeamId]:100};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[ChannelIsSuccessful]:!0}),e.pass()}),s.serial("onexecuteSendMessage (of a Channel) succeeds",async e=>{let s=Channel,l=ChannelSendMessage,n={[ChannelId]:345,[ChannelTeamId]:100,[ChannelMessageSubject]:"subject",[ChannelMessageBody]:"body",[ChannelMessageIsImportant]:!0};t(n);let o=null;a("postResult",(function(e){o=e})),await onexecute(s,l,{},n),e.deepEqual(o,{[ChannelIsSuccessful]:!0}),e.pass()});
//# sourceMappingURL=test.js.map
